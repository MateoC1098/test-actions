name: Realizar test para integrar con main

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  test_post_microservice:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2
    - name: Configuraci贸n de entorno de python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
    - name: Configuraci贸n de entorno de python y ejecutar pruebas para post-management
      working-directory: post-management
      run: |
        pipenv install --deploy --system --ignore-pipfile
        python -m unittest -v tests/*/test_*.py
        coverage run -m unittest tests/*/test_*.py
        coverage report -m
        cov_score=$(awk '$1 == "TOTAL" {print $NF+0}' .coverage)
    - name: Check coverage for post-management
      working-directory: post-management 
      run: |
        coverage=$(coverage report -m | grep TOTAL | awk '{print $NF}' | tr -d '%')
        if (( $(echo "$coverage > 70" | bc -l) )); then
          echo "Code coverage meets the requirement. Coverage: $coverage%"
          exit 0
        else
          echo "Code coverage does not meet the requirement. Coverage: $coverage%"
          exit 1
        fi

  test_user_microservice:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configuraci贸n de entorno de python para user-management
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install pipenv para user-management
      working-directory: user-management
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
    - name: Install dependencies
      working-directory: user-management
      run: pipenv install --dev
    - name: Run unit tests
      working-directory: user-management
      run: pipenv run pytest --cov=src -v -s --cov-fail-under=70

  test_offer_microservice:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configuraci贸n de entorno de python para offer-management
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install pipenv para offer-management
      working-directory: offer-management
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
    - name: Install dependencies
      working-directory: offer-management
      run: pipenv install --dev
    - name: Run unit tests
      working-directory: offer-management
      run: pipenv run pytest --cov=src -v -s --cov-fail-under=70


  merge-to-main:
    needs: [test_post_microservice, test_user_microservice]
    runs-on: ubuntu-latest
    if: success()
    steps:
    - name: Merge Pull Request
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const result = await github.pulls.merge({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
          });
          console.log(result);
